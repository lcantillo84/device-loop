// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250704133610_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DaysUsed")
                        .HasColumnType("integer");

                    b.Property<int>("LaunchedYear")
                        .HasColumnType("integer");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("NetBrandNewPayout")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("NetBrokenPayout")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("NetFairPayout")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("NetFlawlessPayout")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("NetGoodPayout")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("NetVeryGoodPayout")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("OverheadCostUsd")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("PayoutBrandNew")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("PayoutBroken")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("PayoutFair")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("PayoutFlawless")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("PayoutGood")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("PayoutVeryGood")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("PriceUsd")
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("StorageGB")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal>("TreeCostUsd")
                        .HasColumnType("numeric(10,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
